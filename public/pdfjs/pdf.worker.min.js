
/*
 * Copyright 2024 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// For now, we'll use a fallback approach that doesn't require the full worker file
// This creates a minimal worker implementation that should work for basic PDF text extraction

// Create a data URL worker as a fallback
const workerBlob = new Blob([`
  // Basic PDF.js worker implementation
  importScripts('https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.worker.min.js');
`], { type: 'application/javascript' });

const workerUrl = URL.createObjectURL(workerBlob);

// Export the worker URL for use by PDF.js
if (typeof window !== 'undefined') {
  window.pdfjsWorkerSrc = workerUrl;
}

console.log('PDF.js worker configured with fallback implementation');
